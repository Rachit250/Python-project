{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Rachit250/Python-project/blob/main/Python%20project\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "class Student:\n",
        "    def _init_(self, name, roll_no, branch):\n",
        "        self.name = name\n",
        "        self.roll_no = roll_no\n",
        "        self.branch = branch\n",
        "\n",
        "    def _str_(self):\n",
        "        return f\"Name: {self.name}, Roll No: {self.roll_no}, Branch: {self.branch}\"\n",
        "\n",
        "\n",
        "class Room:\n",
        "    def _init_(self, room_no, capacity):\n",
        "        self.room_no = room_no\n",
        "        self.capacity = capacity\n",
        "        self.students = []\n",
        "\n",
        "    def add_student(self, student):\n",
        "        if len(self.students) < self.capacity:\n",
        "            self.students.append(student)\n",
        "            print(f\"{student.name} allocated to Room {self.room_no}\")\n",
        "        else:\n",
        "            print(f\"Room {self.room_no} is full\")\n",
        "\n",
        "    def _str_(self):\n",
        "        return f\"Room {self.room_no}: Capacity: {self.capacity}, Occupancy: {len(self.students)}\"\n",
        "\n",
        "\n",
        "class HostelManagementSystem:\n",
        "    def _init_(self):\n",
        "        self.students = []\n",
        "        self.rooms = []\n",
        "\n",
        "    def add_student(self, name, roll_no, branch):\n",
        "        student = Student(name, roll_no, branch)\n",
        "        self.students.append(student)\n",
        "        print(f\"{student.name} added successfully\")\n",
        "\n",
        "    def add_room(self, room_no, capacity):\n",
        "        room = Room(room_no, capacity)\n",
        "        self.rooms.append(room)\n",
        "        print(f\"Room {room_no} added successfully\")\n",
        "\n",
        "    def allocate_room(self, roll_no, room_no):\n",
        "        student = next((s for s in self.students if s.roll_no == roll_no), None)\n",
        "        room = next((r for r in self.rooms if r.room_no == room_no), None)\n",
        "\n",
        "        if student is None:\n",
        "            print(f\"Student with roll number {roll_no} not found\")\n",
        "            return\n",
        "\n",
        "        if room is None:\n",
        "            print(f\"Room {room_no} not found\")\n",
        "            return\n",
        "\n",
        "        room.add_student(student)\n",
        "\n",
        "    def display_students(self):\n",
        "        print(\"List of Students:\")\n",
        "        for student in self.students:\n",
        "            print(student)\n",
        "\n",
        "    def display_rooms(self):\n",
        "        print(\"List of Rooms:\")\n",
        "        for room in self.rooms:\n",
        "            print(room)\n",
        "\n",
        "\n",
        "def main():\n",
        "    hostel = HostelManagementSystem()\n",
        "\n",
        "    while True:\n",
        "        print(\"\\nHostel Management System\")\n",
        "        print(\"1. Add Student\")\n",
        "        print(\"2. Add Room\")\n",
        "        print(\"3. Allocate Room\")\n",
        "        print(\"4. Display Students\")\n",
        "        print(\"5. Display Rooms\")\n",
        "        print(\"6. Exit\")\n",
        "\n",
        "        choice = input(\"Enter your choice: \")\n",
        "\n",
        "        if choice == '1':\n",
        "            name = input(\"Enter student name: \")\n",
        "            roll_no = input(\"Enter student roll number: \")\n",
        "            branch = input(\"Enter student branch: \")\n",
        "            hostel.add_student(name, roll_no, branch)\n",
        "\n",
        "        elif choice == '2':\n",
        "            room_no = input(\"Enter room number: \")\n",
        "            capacity = int(input(\"Enter room capacity: \"))\n",
        "            hostel.add_room(room_no, capacity)\n",
        "\n",
        "        elif choice == '3':\n",
        "            roll_no = input(\"Enter student roll number: \")\n",
        "            room_no = input(\"Enter room number: \")\n",
        "            hostel.allocate_room(roll_no, room_no)\n",
        "\n",
        "        elif choice == '4':\n",
        "            hostel.display_students()\n",
        "\n",
        "        elif choice == '5':\n",
        "            hostel.display_rooms()\n",
        "\n",
        "        elif choice == '6':\n",
        "            print(\"Exiting...\")\n",
        "            break\n",
        "\n",
        "        else:\n",
        "            print(\"Invalid choice. Please try again.\")\n",
        "\n",
        "\n",
        "if _name_ == \"_main_\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "XMYVF14vNG97"
      },
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "name": "Welcome To Colaboratory",
      "toc_visible": true,
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}